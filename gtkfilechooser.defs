;; -*- lisp -*-

;; Enums

(define-enum GtkFileChooserAction
  (open GTK_FILE_CHOOSER_ACTION_OPEN)
  (save GTK_FILE_CHOOSER_ACTION_SAVE)
  (select-folder GTK_FILE_CHOOSER_ACTION_SELECT_FOLDER)
  (create-folder GTK_FILE_CHOOSER_ACTION_CREATE_FOLDER))

(define-enum GtkFileChooserConfirmation
  (confirm GTK_FILE_CHOOSER_CONFIRMATION_CONFIRM)
  (accept-filename GTK_FILE_CHOOSER_CONFIRMATION_ACCEPT_FILENAME)
  (select-again GTK_FILE_CHOOSER_CONFIRMATION_SELECT_AGAIN))

(define-enum GtkFileChooserError
 (nonexistent GTK_FILE_CHOOSER_ERROR_NONEXISTENT)
 (bad-filename GTK_FILE_CHOOSER_ERROR_BAD_FILENAME)
 (already-exists GTK_FILE_CHOOSER_ERROR_ALREADY_EXISTS))

(define-enum GtkFileFilterFlags
  (filename GTK_FILE_FILTER_FILENAME)
  (uri GTK_FILE_FILTER_URI)
  (display-name GTK_FILE_FILTER_DISPLAY_NAME)
  (mime-type GTK_FILE_FILTER_MIME_TYPE))

;; GtkFileChooser [Base]

(define-object GtkFileChooser (GObject))

(define-func gtk_file_chooser_set_action
  none
  ((GtkFileChooser chooser)
   (GtkFileChooserAction action)))

(define-func gtk_file_chooser_get_action
  GtkFileChooserAction
  ((GtkFileChooser chooser)))

(define-func gtk_file_chooser_set_local_only
  none
  ((GtkFileChooser chooser)
   (bool local_only)))

(define-func gtk_file_chooser_get_local_only
  bool
  ((GtkFileChooser chooser)))

(define-func gtk_file_chooser_set_select_multiple
  none
  ((GtkFileChooser chooser)
   (bool select_multiple)))

(define-func gtk_file_chooser_get_select_multiple
  bool
  ((GtkFileChooser chooser)))

(define-func gtk_file_chooser_set_show_hidden
  none
  ((GtkFileChooser chooser)
   (bool show_hidden)))

(define-func gtk_file_chooser_get_show_hidden
  bool
  ((GtkFileChooser chooser)))

(define-func gtk_file_chooser_set_do_overwrite_confirmation
  none
  ((GtkFileChooser chooser)
   (bool confirm)))

(define-func gtk_file_chooser_get_do_overwrite_confirmation
  bool
  ((GtkFileChooser chooser)))

;; GtkFileChooser [Filenames]

(define-func gtk_file_chooser_set_filename
  none
  ((GtkFileChooser chooser)
   (string filename)))

(define-func gtk_file_chooser_get_filename
  string
  ((GtkFileChooser chooser)))

(define-func gtk_file_chooser_select_filename
  bool
  ((GtkFileChooser chooser)
   (string filename)))

(define-func gtk_file_chooser_unselect_filename
  none
  ((GtkFileChooser chooser)
   ((tvec string in) filename)))

(define-func gtk_file_chooser_select_all
  none
  ((GtkFileChooser chooser)))

(define-func gtk_file_chooser_unselect_all
  none
  ((GtkFileChooser chooser)))

;;; XXX need GSList return type support
;;(define-func gtk_file_chooser_get_filenames
;;  GSList
;;  ((GtkFileChooser chooser)))

(define-func gtk_file_chooser_set_current_folder
  bool
  ((GtkFileChooser chooser)
   ((tvec string in) folder)))

(define-func gtk_file_chooser_get_current_folder
  string
  ((GtkFileChooser chooser)))

;; GtkFileChooser [URI]

(define-func gtk_file_chooser_set_uri
  bool
  ((GtkFileChooser chooser)
  ((tvec string in) uri)))

(define-func gtk_file_chooser_get_uri
  string
  ((GtkFileChooser chooser)))

(define-func gtk_file_chooser_select_uri
  bool
  ((GtkFileChooser chooser)
   ((tvec string in) uri)))

(define-func gtk_file_chooser_unselect_uri
  none
  ((GtkFileChooser chooser)
   ((tvec string in) uri)))

;;; XXX need GSList return type support
;;(define-func gtk_file_chooser_get_uris
;;  GSList
;;  ((GtkFileChooser chooser)))

(define-func gtk_file_chooser_set_current_folder_uri
  bool
  ((GtkFileChooser chooser)
  ((tvec string in) uri)))

(define-func gtk_file_chooser_get_current_folder_uri
  string
  ((GtkFileChooser chooser)))

;; GtkFileChooser [Preview]

(define-func gtk_file_chooser_set_preview_widget
  none
  ((GtkFileChooser chooser)
   (GtkWidget widget)))

(define-func gtk_file_chooser_get_preview_widget
  GtkWidget
  ((GtkFileChooser chooser)))

(define-func gtk_file_chooser_set_preview_widget_active
  none
  ((GtkFileChooser chooser)
   (bool active)))

(define-func gtk_file_chooser_get_preview_widget_active
  bool
  ((GtkFileChooser chooser)))

(define-func gtk_file_chooser_set_use_preview_label
  none
  ((GtkFileChooser chooser)
   (bool use_label)))

(define-func gtk_file_chooser_get_use_preview_label
  bool
  ((GtkFileChooser chooser)))

(define-func gtk_file_chooser_get_preview_filename
  string
  ((GtkFileChooser chooser)))

(define-func gtk_file_chooser_get_preview_uri
  string
  ((GtkFileChooser chooser)))

;; GtkFileChooser [Extra]

(define-func gtk_file_chooser_set_extra_widget
  none
  ((GtkFileChooser chooser)
   (GtkWidget widget)))

(define-func gtk_file_chooser_get_extra_widget
  GtkWidget
  ((GtkFileChooser chooser)))

;; GtkFileFilter

(define-object GtkFileFilter (GObject))

(define-func gtk_file_filter_new
  GtkFileFilter
   ())

(define-func gtk_file_filter_set_name
  none
  ((GtkFileFilter filter)
   ((tvec string in) name)))

(define-func gtk_file_filter_get_name
  string
  ((GtkFileFilter filter)))

(define-func gtk_file_filter_add_mime_type
  none
  ((GtkFileFilter filter)
   ((tvec string in) mimetype)))

(define-func gtk_file_filter_add_pattern
  none
  ((GtkFileFilter filter)
   ((tvec string in) pattern)))

(define-func gtk_file_filter_add_pixbuf_formats
  none
  ((GtkFileFilter filter)))

;;; XXX Need GtkFileFilterFunc
;;  (define-func gtk_file_filter_add_custom
;;    none
;;    ((GtkFileFilter filter)
;;     (GtkFileFilterFlags flags)
;;     (GtkFileFilterFunc func)
;;     (GPointer data)
;;     (GDestroyNotify notify)))

(define-func gtk_file_filter_get_needed
  GtkFileFilterFlags
  ((GtkFileFilter filter)))

;;; XXX Need GtkFileFilterInfo
;;  (define-func gtk_file_filter_filter
;;    bool
;;    ((GtkFileFilter filter)
;;     (GtkFileFilterInfo info)))

;; GtkFileChooser [Filter]

(define-func gtk_file_chooser_add_filter
  none
  ((GtkFileChooser chooser)
   (GtkFileFilter filter)))

(define-func gtk_file_chooser_remove_filter
  none
  ((GtkFileChooser chooser)
   (GtkFileFilter filter)))

;; XXX Need GSList Returntype support
;;  (define-func gtk_file_chooser_list_filters
;;    GSList
;;    ((GtkFileChooser chooser)))

(define-func gtk_file_chooser_set_filter
  none
  ((GtkFileChooser chooser)
   (GtkFileFilter filter)))

(define-func gtk_file_chooser_get_filter
  GtkFileFilter
  ((GtkFileChooser chooser)))

;; GtkFileChooser [Shortcuts]

(define-func gtk_file_chooser_add_shortcut_folder
  bool
  ((GtkFileChooser chooser)
   ((tvec string in) folder)
   (GPointer gerror error)))

(define-func gtk_file_chooser_remove_shortcut_folder
  bool
  ((GtkFileChooser chooser)
   ((tvec string in) folder)
   (GPointer gerror error)))

;; XXX Need GSList Returntype support
;; (define-func gtk_file_chooser_list_shortcut_folders
;;   GSList
;;   ((GtkFileChooser chooser)))

(define-func gtk_file_chooser_add_shortcut_folder_uri
  bool
  ((GtkFileChooser chooser)
   ((tvec string in) folder)
   (GPointer gerror error)))

(define-func gtk_file_chooser_remove_shortcut_folder_uri
  bool
  ((GtkFileChooser chooser)
   ((tvec string in) folder)
   (GPointer gerror error)))

;; XXX Need GSList Returntype support
;; (define-func gtk_file_chooser_list_shortcut_folder_uris
;;   GSList
;;   ((GtkFileChooser chooser)))

;; GtkFileChooserWidget

(define-object GtkFileChooserWidget (GtkVBox))

(define-func gtk_file_chooser_widget_new
  GtkWidget
  ((GtkFileChooserAction action)))

(define-func gtk_file_chooser_widget_new_with_backend
  GtkWidget
  ((GtkFileChooserAction action)
   ((tvec string in) backend)))
